(* This is a comment. Same syntax as in ocaml. *)

type access = [
  | Private of priv
  | Public of publ
] <json adapter.ocaml="Atdgen_codec_runtime.Json_adapter.Type_field">

type priv = {
  password: string;
  secret: bool;
}

type publ = {
  address: string;
}

type date = float wrap <ocaml module="Js.Date" wrap="Js.Date.fromFloat" unwrap="Js.Date.valueOf">

(* Some people don't want to provide a phone number, make it optional *)
type person = {
  name: string;
  email: string;
  ?phone: string nullable;
}

type event = {
  access: access;
  name: string;
  host: person;
  date: date;
  guests: person list;
}

type events = event list
